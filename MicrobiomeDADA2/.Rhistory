knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
cars
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
cars
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
cars
print("test")
plot(pressure)
1+100
x<<trees
x<<5
x<-trees
View(x)
x<-5
1:5
ls
ls()
rm(x)
sin(1)
log(1)
log(10)
log(1)
log10
log10(10)
exp(0.5)
#what number it putting to the 1/2 power?
x<-min_height
x<-min.height
x<-5
x<-_age
min_height<-5
y<-min_height
y==min_height
7<-_age
_age<-7
min_age<-7
.mass<-10
MaxLength<-11
min-length<-9
2widths<-6
celsius2kelvin<-10
2^(1:6)
ls()
ls(all.names=TRUE)
mass<-47.5
age<-122
mass<-mass*2.3
age<-age-20
age<mass
rmv(mass)
remove(mass)
remove(age)
install.packages("ggplot2")
install.packages(plyr)
intall.packages("plyr")
install.packages("plyr")
install.packages("gapminder")
setwd("~/Desktop/CV")
install.packages('vitae')
install.packages('tinytex')
tinytex::install_tinytex()
setwd("/Users/allywatkins/Downloads/BioinformaticsExternalHardrive /MicrobiomeDADA2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.16")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.18")
BiocManager::install(version = '3.18')
library(dada2)
if (!requireNamespace("BiocManager", quietly = TRUE))
+     install.packages("BiocManager")
> BiocManager::install("dada2", version = "3.18")
if (!requireNamespace("BiocManager", quietly = TRUE))
+     install.packages("BiocManager") > BiocManager::install("dada2", version = "3.18")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.18")
library(dada2)
library(dada2)
library(dada2)
path <- "sequences"
list.files(path)
# fastq filenames have format: SAMPLENAME_R1_001.fastq
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:2])
# Place filtered files in filtered/ subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
names(filtFs) <- sample.names
# quality decreases at 120
out <- filterAndTrim(fnFs, filtFs, truncLen=c(120),
maxN=0, maxEE=c(2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=TRUE) # On Windows set multithread=FALSE
head(out)
errF <- learnErrors(filtFs, multithread=TRUE)
plotErrors(errF, nominalQ=TRUE)
dadaFs <- dada(filtFs, err=errF, multithread=TRUE)
seqtab <- makeSequenceTable(mergers)
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
# Inspect distribution of sequence lengths
table(nchar(getSequences(seqtab)))
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=TRUE, verbose=TRUE)
dim(seqtab.nochim)
getN <- function(x) sum(getUniques(x))
track <- cbind(out, getN(dadaFs), rowSums(seqtab.nochim))
getN <- function(x) sum(getUniques(x))
track <- cbind(out, sapply(dadaFs, getN), rowSums(seqtab.nochim))
colnames(track) <- c("input", "filtered", "denoisedF", "nonchim")
rownames(track) <- sample.names
head(track)
save(seqtab.nochim, file="RData/seqtab.nochim.RData")
setwd("/Users/allywatkins/Downloads/BioinformaticsExternalHardrive /MicrobiomeDADA2")
load("RData/seqtab.nochin.RData")
load("RData/seqtab.nochim.RData")
# download the Silva species database from https://zenodo.org/records/4587955
taxa <- assignTaxonomy(seqtab.nochim, "silva_nr99_v138.1_wSpecies_train_set.fa.gz")
save(taxa, file = "RData/taxa.RData")
setwd("/Users/allywatkins/Downloads/BioinformaticsExternalHardrive /MicrobiomeDADA2")
source('http://bioconductor.org/biocLite.R')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
source('http://bioconductor.org/biocLite.R')
BiocManager::install(c("phyloseq"))
source('http://bioconductor.org/biocLite.R')
source('http://bioconductor.org/biocLite.R')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
force = TRUE
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
force = TRUE
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
force = TRUE
packageVersion('phyloseq')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
source('http://bioconductor.org/biocLite.R')
source('http://bioconductor.org/biocLite.R')
library(phyloseq)
library(phyloseq)
load("RData/taxa.RData")
load("RData/seqtab.nochim.RData")
metadata<-read.csv("metadata.csv", header=TRUE, raw.names = 1)
metadata<-read.csv("metadata.csv", header=TRUE, row.names = 1)
View(metadata)
View(metadata)
#make sure the seqtab.nochim and taxa objects are loaded
physeq <- phyloseq(otu_table(seqtab.nochim, taxa_are_rows = FALSE),
sample_data(metadata),
tax_table(taxa))
physeq
# convert from raw to abundance
physeq <- transform_sample_counts(physeq, function(abund) 1*(abund>0))
physeq
dna <- Biostrings::DNAStringSet(taxa_names(physeq))
names(dna) <- taxa_names(physeq)
physeq <- merge_phyloseq(physeq, dna)
taxa_names(physeq) <- paste0("ASV", seq(ntaxa(physeq)))
physeq
library(phyloseq)
library(dplyr)
physeq <- physeq %>% subset_taxa( Family!= "Mitochondria" | is.na(Family) &
Order!= "Chloroplast" | is.na(Order))
unload(dplyr)
unloadNamespace(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
